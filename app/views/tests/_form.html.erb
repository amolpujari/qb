<%= form_for(@test, :html => { :onsubmit=> "return validate_test()"}) do |f| %>
  <%= raw errors_for @test %>

  <div class="well">
    <fieldset>
      <div class="controls" style="font-weight: bolder;font-size:16px;color:#666;">
        <%= form_action_title %> test &nbsp <input type="text" name="test[title]" value="<%= @test.title %>" class="input-xlarge" autofocus="autofocus" style="margin-right:10px;" />
        with total <span id="total_questions" style="padding:4px;">0</span> questions for <span id="total_marks" style="padding:4px;">0</span> marks,
        and duration is <%= raw input_duration %>
      </div>
    </fieldset>
  </div>

  <div class="well" style="background-color: white;">
    <table class="table table-striped">
      <thead>
        <tr>
          <th>Topic</th>
          <th>Complexity</th>
          <th>Type</th>
          <th>Available Questions</th>
          <th>Selected Questions</th>
          <th>Marks for each question</th>
          <th>Total Marks</th>
          <th></th>
        </tr>
      </thead>
      <tbody  id="tests_topics">
        <tr id="new_topic_replacement"></tr>
      </tbody>
    </table>
    <a class="right" href="#" onclick="check_marks_and_add_topic();">Add topic</a>
  </div>

  <div class="form-actions">
    <%= f.submit nil, :class => 'btn btn-primary' %>
  </div>
<% end %>


<script type="text/javascript">
  // collect available questions count
<% available_questions = Question.available_for_test %>
  var available_questions = new Array();
<% available_questions.each do |available_question| %>
    available_questions.push({
      'topic'     :'<%= available_question[0] -%>',
      'complexity':'<%= available_question[1] -%>',
      'nature'    :'<%= available_question[2] -%>',
      'count'     : <%= available_question[3] -%>
    });
<%end%>
  
  var number_of_topics = 0;
  var topic_counter = 0;
  var new_topic = '<%= raw escape_javascript render :partial => 'new_topic' -%>';

  function update_total_marks(){
    var sum = 0;
    var marks_elements = $('span.total_marks_identifier');
    for (var i = 0; i < marks_elements.length; i++) {
      sum += parseInt(marks_elements[i].innerHTML);
    }
    $('#total_marks').html(sum);
    $('#total_marks').effect('highlight',null,2000);

    update_total_questions()
  }

  function highlight_topic(row_count){
    $('#topic_'+row_count).effect('highlight',null,2000);
    $('#complexity_'+row_count).effect('highlight',null,2000);
    $('#nature_'+row_count).effect('highlight',null,2000);
    $('#available_questions_'+row_count).parent().effect('highlight',null,2000);
    $('#selected_questions_'+row_count).parent().effect('highlight',null,2000);
    $('#marks_for_each_question_'+row_count).parent().effect('highlight',null,2000);
    $('#total_marks_'+row_count).parent().effect('highlight',null,2000);
  }

  function update_total_questions(){
    var total_questions=0
    var questions_elements = $('select.total_questions_identifier');
    
    for(var i=0;i<questions_elements.length;i++){
      total_questions += parseInt(questions_elements[i].value);
    }
    
    $('#total_questions').html(total_questions);
    $('#total_questions').effect('highlight',null,2000);
  }

  function update_marks(row_count){
    if (!$('#number_of_questions_'+row_count).val()){
      $('#total_marks_'+row_count).html(0);

    }else{
      var marks_for_each_question = parseInt($('#marks_for_each_question_'+row_count).val());
      var selected_questions      = parseInt($('#number_of_questions_'+row_count).val());
      $('#total_marks_'+row_count).html( marks_for_each_question * selected_questions);
    }

    $('#total_marks_'+row_count).effect('highlight',null,2000);
    update_total_marks();
  }

  function update_selected_questions_list(row_count, max){
    var html = "<select name=\"test_topics[][number_of_questions]\" id=\"number_of_questions_"+row_count+"\" onchange=\"update_marks("+row_count+",this.value);\" class=\"total_questions_identifier\"  style=\"width:44px;\" >";
    var start = 1;
    
    if (max==0)
      start=0;

    for (var i = start; i <= max; i++){
      html += "<option value='"+i+"'>"+i+"</option>";
    }
    
    html << "</select>"
    $('#selected_questions_'+row_count).html(html);
    $('#number_of_questions_'+row_count).effect('highlight',null,2000);
    update_marks(row_count, start);
  }

  function update_question_count(row_count){
    var topic      = $('select#topic_'+row_count).val();
    var complexity = $('select#complexity_'+row_count).val();
    var nature     = $('select#nature_'+row_count).val();

    if( topic == "" || complexity == "" || nature == ""){
      update_selected_questions_list(row_count, 0);
      return 0
    }
    
    for (var i = 0; i < available_questions.length; i++) {
      if (available_questions[i].topic == topic && available_questions[i].complexity == complexity && available_questions[i].nature == nature ){
        $('span#available_questions_'+row_count).html(available_questions[i].count);
        update_selected_questions_list(row_count, available_questions[i].count);
        return available_questions[i].count;
      }
    }
  }

  function check_marks(){
    var total_marks_element = $('span.total_marks_identifier');

    for(var i=0;i<total_marks_element.length;i++){
      if(parseInt(total_marks_element[i].innerHTML) == 0){
        alert('You must select at least 1 question for the topic');
        //highlight_topic(i); i is index here not for js_counter
        return false
      }
    }
    return true;
  }

  function check_marks_and_add_topic(){
    if(!check_marks())
      return false;
    add_topic();
  }

  function add_topic(){
    $('tr#new_topic_replacement').replaceWith(new_topic.replace(/js_counter/g,topic_counter));
    update_question_count(topic_counter);
    topic_counter ++;
    number_of_topics ++;
  }

  function remove_topic(row_count){
    if (number_of_topics==1){
      alert('At least one topic require.');
      return;
    }
    $('#topic_count_'+row_count).remove();
    number_of_topics --;
    update_total_marks();
  }

  function check_duplicate_topic_and_question(row_count){
    var selected_topics       = new Array();
    var selected_complexities = new Array();
    var selected_natures      = new Array();

    var topic_elements        = $('select.topic_identifier');
    var complexity_elements   = $('select.complexity_identifier');
    var nature_elements       = $('select.nature_identifier');

    //refresh available question count on 'Please Select'

    if( $('#topic_'+row_count).val() == "" || $('#complexity_'+row_count).val() == "" || $('#nature_'+row_count).val() == ""){
      $('#available_questions_'+row_count).html('0');
      update_selected_questions_list(row_count, 0);
    }
    
    for(var i=0;i<topic_elements.length;i++){
      selected_topics.push(topic_elements[i].value);
      selected_complexities.push(complexity_elements[i].value);
      selected_natures.push(nature_elements[i].value);
    }

    var duplicate = topic_exists( selected_topics, selected_complexities, selected_natures)
    
    if(duplicate){
      alert('You can select particular topic, complexity and type only once');

      $('#topic_'+row_count).val("");
      $('#complexity_'+row_count).val("");
      $('#nature_'+row_count).val("");

      $('#available_questions_'+row_count).html('0');
      $('#selected_questions_'+row_count).html('0');
      highlight_topic(row_count);
    }

    update_question_count(row_count);
  }

  function topic_exists( selected_topics, selected_complexities, selected_natures){
    var duplicate=false;

    for(var i=0;i<number_of_topics;i++){
      var current_topic       = selected_topics[i];
      var current_complexity  = selected_complexities[i];
      var current_nature      = selected_natures[i];

      if (!( current_topic == "" || current_complexity == "" || current_nature == "")){
        for(var j=i+1;j<number_of_topics;j++){
          if(selected_topics[j] == current_topic && selected_complexities[j] == current_complexity && selected_natures[j] == current_nature)
            duplicate = true;
        }
      }
    }
    
    return duplicate;
  }

  function validate_test(){
    if($('#test_title').value=="" || $('#test_title').value.length < 4){
      alert('Test title cannot be blank. Should be minimum 4 characters');
      return false;
    }
    if(!check_marks())
      return false
    return true;
  }

<% @test_topics = @test.test_topics %>

<% if @test_topics.blank? %>
    add_topic();
<% end %>

<% @test_topics.each do |test_topic| %>
    add_topic();// topics_counter was increamented here

    $('#topic_'+(topic_counter - 1)).val('<%= test_topic.topic -%>');
    $('#complexity_'+(topic_counter - 1)).val('<%= test_topic.complexity -%>');
    $('#nature_'+(topic_counter - 1)).val('<%= test_topic.nature -%>');
    update_question_count((topic_counter - 1));
    $('#number_of_questions_'+(topic_counter - 1)).val(<%= test_topic.number_of_questions -%>);
    $('#marks_for_each_question_'+(topic_counter - 1)).val(<%= test_topic.marks_for_each_question -%>);
    
    update_marks(topic_counter - 1);
<%end%>

  function isArrowKeyPressed(e){
    var evt = e || window.event;
    if(evt.keyCode >= 37 && evt.keyCode <= 40){
      return true;
    }
    return false;
  }
</script>


